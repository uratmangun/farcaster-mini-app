#!/usr/bin/env node

import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

// Read the farcaster.json config
const configPath = path.join(__dirname, '../public/.well-known/farcaster.json');
const config = JSON.parse(fs.readFileSync(configPath, 'utf-8'));

// Generate the metadata configuration
const metaConfig = {
  title: config.miniapp.name,
  description: "Welcome to Remix!",
  farcasterMiniapp: {
    version: config.miniapp.version,
    imageUrl: config.miniapp.imageUrl,
    button: {
      title: config.miniapp.buttonTitle,
      action: {
        type: "launch_miniapp",
        name: config.miniapp.name,
        url: config.miniapp.homeUrl,
        splashImageUrl: config.miniapp.splashImageUrl,
        splashBackgroundColor: config.miniapp.splashBackgroundColor
      }
    }
  },
  config: config.miniapp
};

// Write the config to a TypeScript file that can be imported
const outputPath = path.join(__dirname, '../app/meta-config.ts');
const outputContent = `// This file is auto-generated by scripts/generate-meta-config.js
// Do not edit manually - edit public/.well-known/farcaster.json instead

export const META_CONFIG = ${JSON.stringify(metaConfig, null, 2)} as const;

export type MetaConfig = typeof META_CONFIG;
`;

fs.writeFileSync(outputPath, outputContent);
console.log('âœ… Generated meta-config.ts with static metadata from farcaster.json');
